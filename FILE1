import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Load the dataset
data = pd.read_csv("noise_pollution_data.csv")

# Display the first few rows
print("Sample data:")
print(data.head())

# Features and target
features = ['traffic_density', 'industrial_activity', 'temperature', 'humidity', 'wind_speed', 'time_of_day']
target = 'noise_level'

X = data[features]
y = data[target]

# Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model
model = LinearRegression()
model.fit(X_train, y_train)

# Prediction
y_pred = model.predict(X_test)

# Evaluation
print("\nModel Evaluation:")
print("Mean Squared Error (MSE):", mean_squared_error(y_test, y_pred))
print("R^2 Score:", r2_score(y_test, y_pred))

# Plotting predicted vs actual
plt.figure(figsize=(8,5))
plt.scatter(y_test, y_pred, alpha=0.7)
plt.xlabel("Actual Noise Level (dB)")
plt.ylabel("Predicted Noise Level (dB)")
plt.title("Actual vs Predicted Noise Pollution")
plt.grid(True)
plt.show()
